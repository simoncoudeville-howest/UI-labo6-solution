/*---------------------------------------/*
 # TOOLS
/*---------------------------------------*/

// a function to get the color from the palette
@function get-color($palette, $color) {
  @return map-get(map-get($palettes, $palette), $color);
}

//
// Media Query mixin
// @include mq(#point, #query1, #query2);
//

@mixin mq($breakpoint, $query1: min, $query2: width) {
  $query: map-get($breakpoints, $breakpoint);

  @if $query != null {
    @media (#{$query1}-#{$query2}: #{$query}) {
      @content;
    }
  } @else {
    @media (#{$query1}-#{$query2}: $breakpoint) {
      @content;
    }
  }
}

/*---------------------------------------/*
 # SETTINGS
/*---------------------------------------*/

// ---
// Settings: Colors
// ---

$color-blue: #1abaff;
$color-blue-hue: hue($color-blue);
$color-blue-saturation: saturation($color-blue);

$color-teal: #1affba;
$color-teal-hue: hue($color-teal);
$color-teal-saturation: saturation($color-teal);

$color-gray-hue: hue($color-blue);
$color-gray-saturation: 10%;

$palettes: (
  color-gray: (
    100: hsl($color-gray-hue, $color-gray-saturation, 95%),
    200: hsl($color-gray-hue, $color-gray-saturation, 90%),
    300: hsl($color-gray-hue, $color-gray-saturation, 80%),
    400: hsl($color-gray-hue, $color-gray-saturation, 70%),
    500: hsl($color-gray-hue, $color-gray-saturation, 50%),
    600: hsl($color-gray-hue, $color-gray-saturation, 40%),
    700: hsl($color-gray-hue, $color-gray-saturation, 30%),
    800: hsl($color-gray-hue, $color-gray-saturation, 20%),
    900: hsl($color-gray-hue, $color-gray-saturation, 10%),
  ),
  color-blue: (
    100: hsl($color-blue-hue, $color-blue-saturation - 10%, 95%),
    200: hsl($color-blue-hue, $color-blue-saturation - 10%, 90%),
    300: hsl($color-blue-hue, $color-blue-saturation - 5%, 80%),
    400: hsl($color-blue-hue, $color-blue-saturation - 5%, 65%),
    500: hsl($color-blue-hue, $color-blue-saturation, 50%),
    600: hsl($color-blue-hue, $color-blue-saturation + 5%, 40%),
    700: hsl($color-blue-hue, $color-blue-saturation + 5%, 30%),
    800: hsl($color-blue-hue, $color-blue-saturation + 10%, 20%),
    900: hsl($color-blue-hue, $color-blue-saturation + 10%, 10%),
  ),
  color-teal: (
    100: hsl($color-teal-hue, $color-teal-saturation - 10%, 95%),
    200: hsl($color-teal-hue, $color-teal-saturation - 10%, 90%),
    300: hsl($color-teal-hue, $color-teal-saturation - 5%, 80%),
    400: hsl($color-teal-hue, $color-teal-saturation, 70%),
    500: hsl($color-teal-hue, $color-teal-saturation, 50%),
    600: hsl($color-teal-hue, $color-teal-saturation + 5%, 45%),
    700: hsl($color-teal-hue, $color-teal-saturation + 5%, 35%),
    800: hsl($color-teal-hue, $color-teal-saturation + 10%, 25%),
    900: hsl($color-teal-hue, $color-teal-saturation + 10%, 15%),
  ),
);

$color-text: get-color(color-gray, 900);
$color-text-light: get-color(color-gray, 700);
$color-text-lighter: get-color(color-gray, 500);

$color-primary: get-color(color-blue, 600);
$color-primary-light: get-color(color-blue, 500);
$color-primary-lighter: get-color(color-blue, 400);
$color-primary-dark: get-color(color-blue, 700);

$color-border: get-color(color-gray, 200);
$color-border-light: get-color(color-gray, 100);
$color-border-dark: get-color(color-gray, 300);

// ---
// Settings: Typography
// ---

$root-font-size: 16;

// modular scale ratio
$ratio: 1.125;

// font-sizes
$ms0: calc($root-font-size / 16 * 1rem); // 16px
$ms-1: calc($ms0 / $ratio); // 14px
$ms-2: calc($ms-1 / $ratio); // 12px
$ms1: calc($ms0 * $ratio); // 18px
$ms2: calc($ms1 * $ratio); // 20px
$ms3: calc($ms2 * $ratio); // 23px
$ms4: calc($ms3 * $ratio); // 26px
$ms5: calc($ms4 * $ratio); // 32px
$ms6: calc($ms5 * $ratio); // 36px
$ms7: calc($ms6 * $ratio); // 41px
$ms8: calc($ms7 * $ratio); // 46px
$ms9: calc($ms8 * $ratio); // 52px
$ms10: calc($ms9 * $ratio); // 58px
$ms11: calc($ms10 * $ratio); // 66px

$font-family-primary: "droid-serif", Helvetica, arial, sans-serif;
$font-family-secondary: "Inter Web", Times, serif;

// ---
// Settings: Spacing
// ---

// baseline unit
$baseline: 0.5rem;

// spacing scale
$space-xxs: calc($baseline * 0.5); // 4px
$space-xs: calc($baseline * 1); // 8px
$space-s: calc($baseline * 2); // 16px
$space-m: calc($baseline * 3); // 24px
$space-l: calc($space-s * 2); // 32px
$space-xl: calc($space-m * 2); // 48px
$space-xxl: calc($space-l * 2); // 64px
$space-xxxl: calc($space-xl * 2); // 96px

// ---
// Breakpoints
// ---

$breakpoints: (
  bp1: calc(577 / 16 * 1em),
  bp2: calc(769 / 16 * 1em),
  bp3: calc(993 / 16 * 1em),
  bp4: calc(1201 / 16 * 1em),
  bp5: calc(1401 / 16 * 1em),
) !default;

// ---
// Grid
// ---

$container-max-width: calc(1200 / $root-font-size * 1rem);

// The gutter between columns
$grid-gutter: $space-m;
$grid-gutter-s: $space-s;
$grid-gutter-l: $space-l;

// Define the amount of columns in the grid
$columns: (2, 3, 4, 5, 6) !default;

/*---------------------------------------/*
 # GENERIC
/*---------------------------------------*/

@font-face {
  font-family: "Inter Web";
  font-weight: 400;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Inter-Regular.woff2") format("woff2");
}

@font-face {
  font-family: "Inter Web";
  font-weight: 700;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Inter-Bold.woff2") format("woff2");
}

*,
*:before,
*:after {
  // Reset box-sizing
  box-sizing: border-box;
}

* {
  // Reset margin and font-size
  padding: 0;
  margin: 0;
  font-size: 100%;
  font-weight: normal;
}

img {
  display: block; // make images block level elements
  max-width: 100%; // make images responsive
}

/*---------------------------------------/*
 # ELEMENTS
/*---------------------------------------*/

/*
    Elements: Page
    ---
    Default markup for page level elements
*/

html {
  font-size: calc($root-font-size / 16 * 100%);
  line-height: 1.5; // 24px
  font-family: $font-family-primary; // global font-family
  color: $color-text-light; // global text color
  scroll-behavior: smooth; // smooth scrolling
}

/*
    Customize the background color and color to match your design.
*/

::selection {
  background: $color-primary-light; // background color
  color: white; // text color
}

/*
    Elements: typography
    ---
    Default markup for typographic elements
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-family-secondary;
  color: $color-text;
}

h1 {
  font-size: $ms5;
  font-weight: 700;
  line-height: calc($baseline * 4);
  margin-bottom: $space-m;

  @include mq(bp1) {
    font-size: $ms9;
    line-height: calc($baseline * 6);
  }

  @include mq(bp2) {
    font-size: $ms11;
    line-height: calc($baseline * 8);
  }
}

h2 {
  font-weight: 700;
  font-size: $ms3;
  line-height: calc($baseline * 3);
  margin-bottom: $space-m;
}

h3 {
  font-weight: 700;
  font-size: $ms1;
  line-height: calc($baseline * 3);
  margin-bottom: $space-m;
}

h4,
h5,
h6 {
  font-weight: 700;
  font-size: $ms0;
  line-height: calc($baseline * 3);
  margin-bottom: $space-m;
}

p,
ol,
ul,
dl,
table,
address,
figure {
  margin-bottom: $space-m;
}

ul,
ol {
  margin-left: $space-m;
}

li ul,
li ol {
  margin-bottom: 0;
}

blockquote {
  font-style: italic;
  font-size: $ms3;
  line-height: calc($baseline * 4);
  margin-bottom: $space-m;
}

figcaption {
  font-size: $ms-1;
  line-height: calc($baseline * 2);
  margin-top: $space-xs;
  color: $color-text-lighter;
}

hr {
  border: 0;
  height: 1px;
  background: $color-border;
  margin-bottom: $space-m;
}

a {
  color: $color-primary;
  transition: all 0.1s ease-in-out;
}

a:visited {
  color: $color-primary;
}

a:hover {
  color: $color-primary-light;
}

a:active {
  color: $color-primary-dark;
}

/*---------------------------------------/*
 # OBJECTS
/*---------------------------------------*/

/*
    Objects: Row
    ---
    Creates a horizontal row with padding
*/

.o-row {
  padding: $space-m $space-m 0;
  display: flow-root;

  @include mq(bp2) {
    padding: $space-m $space-xl 0;
  }
}

.o-row--primary {
  background: $color-primary-lighter;
}

.o-row--grey-dark {
  background-color: get-color(color-gray, 800);
  color: white;
}

.o-row--l {
  @include mq(bp2) {
    padding: $space-xl $space-xl $space-m;
  }
}

/*
    Objects: Container
    ---
    Creates a horizontal container that sets de global max-width
*/

.o-container {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: $container-max-width;
}

/*
    Objects: Layout
    ---
    The layout object provides us with a column-style layout system. This object
    contains the basic structural elements, but classes should be complemented
    with width utilities
*/

.o-layout {
  display: flex;
  flex-wrap: wrap;
}

.o-layout__item {
  flex-basis: 100%;
}

/* gutter modifiers, these affect o-layout__item too */

.o-layout--gutter {
  margin-left: calc($grid-gutter / -2);
  margin-right: calc($grid-gutter / -2);
}

.o-layout--gutter > .o-layout__item {
  padding-left: calc($grid-gutter / 2);
  padding-right: calc($grid-gutter / 2);
}

.o-layout--gutter-s {
  margin-left: calc($grid-gutter-s / -2);
  margin-right: calc($grid-gutter-s / -2);
}

.o-layout--gutter-s > .o-layout__item {
  padding-left: calc($grid-gutter-s / 2);
  padding-right: calc($grid-gutter-s / 2);
}

.o-layout--gutter-l {
  margin-left: calc($grid-gutter-l / -2);
  margin-right: calc($grid-gutter-l / -2);
}

.o-layout--gutter-l > .o-layout__item {
  padding-left: calc($grid-gutter-l / 2);
  padding-right: calc($grid-gutter-l / 2);
}

/* reverse horizontal row modifier */

.o-layout--row-reverse {
  flex-direction: row-reverse;
}

/* Horizontal alignment modifiers*/

.o-layout--justify-start {
  justify-content: flex-start;
}

.o-layout--justify-end {
  justify-content: flex-end;
}

.o-layout--justify-center {
  justify-content: center;
}

.o-layout--justify-space-around {
  justify-content: space-around;
}

.o-layout--justify-space-evenly {
  justify-content: space-evenly;
}

.o-layout--justify-space-between {
  justify-content: space-between;
}

/* Vertical alignment modifiers */

.o-layout--align-start {
  align-items: flex-start;
}

.o-layout--align-end {
  align-items: flex-end;
}

.o-layout--align-center {
  align-items: center;
}

.o-layout--align-baseline {
  align-items: baseline;
}

/* Vertical alignment modifiers that only work if there is one than one flex item */

.o-layout--align-content-start {
  align-content: start;
}

.o-layout--align-content-end {
  align-content: end;
}

.o-layout--align-content-center {
  align-content: center;
}

.o-layout--align-content-space-around {
  align-content: space-around;
}

.o-layout--align-content-space-between {
  align-content: space-between;
}

/*------------------------------------*\
  #COMPONENTS
\*------------------------------------*/

/*
    Components: Author
*/

.c-author {
  display: flex;
  align-items: center;
  margin-bottom: 24px;
  gap: 16px;

  @include mq(bp3) {
    flex-direction: column;
    align-items: unset;
  }
}

.c-author__image {
  width: 56px;
  height: 56px;
  border-radius: 100%;
}

.c-author__caption {
  padding-top: 0;
}

.c-author__name,
.c-author__meta {
  margin-bottom: 0;
}

.c-author__name {
  font-size: 16px;
  line-height: 24px;
}

.c-author__meta {
  font-size: 14px;
  font-family: "Inter", sans-serif;
  line-height: 24px;
}

/*
    Components: Quote
*/

.c-quote {
  margin: 48px -24px;
  padding: 24px;
  color: get-color(color-teal, 700);
  background-color: get-color(color-teal, 100);
}

/*
    Component: layout block
    ---
    A small component to demonstrate the layout items
*/

.c-layout-block {
  background-color: LightGrey;
  padding: 8px 12px;
  font-size: 14px;
  line-height: 16px;
}

.c-layout-block--ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/*
    Scope: Content
    Specific behaviour inside s-content class
*/

.s-content * + h2 {
  margin-top: $space-xl;
}

/*---------------------------------------/*
 # UTILITIES
/*---------------------------------------*/

/*
    Utilities: Max widths
    ---
    max-width utility classes
*/

.u-max-width-s {
  max-width: calc(600 / 16 * 1rem);
}

.u-max-width-m {
  max-width: calc(960 / 16 * 1rem);
}

.u-max-width-l {
  max-width: calc(1400 / 16 * 1rem);
}

/*
    Utitlities: whitespace
    ---
    Utility classes to put specific margins and padding onto elements
*/

.u-mb-clear {
  margin-bottom: 0;
}

.u-mb-s {
  margin-bottom: $space-s;
}

.u-mb-xs {
  margin-bottom: $space-xs;
}

/*
  Utilities: Font size
  ---
  Font size utility classes
*/

.u-ms-1 {
  font-size: $ms-1;
  line-height: calc($baseline * 3);
}

/*
    Utilities: Widths
    ---
    Width utility classes
*/

.u-flex-basis-auto {
  flex-basis: auto;
}

// Loop through the different columns
@each $column in $columns {
  // Generate the grid classes
  @each $denominator, $numerator in $column {
    // Begin creating a numerator for our fraction up until we hit the
    // denominator.
    @for $numerator from 1 through $denominator {
      // Build a class in the format `.u-4-of-6`
      .u-#{$numerator}-of-#{$denominator} {
        flex-basis: calc(($numerator / $denominator) * 100%) !important;
      }
    }
  }
}

// Loop through the different breakpoints
@each $breakpoint, $value in $breakpoints {
  @include mq($value) {
    // Loop through the different columns
    @each $column in $columns {
      // Generate the grid classes
      @each $denominator, $numerator in $column {
        // Begin creating a numerator for our fraction up until we hit the
        // denominator.
        @for $numerator from 1 through $denominator {
          // Build a class in the format `.u-4-of-6-bp1`
          .u-#{$numerator}-of-#{$denominator}-#{$breakpoint} {
            flex-basis: calc(($numerator / $denominator) * 100%) !important;
          }
        }
      }
    }
  }
}
